---
import type { GradeOnlyParams, Exercise } from "@types";

import Layout from "@layouts/Layout.astro";
import AccordionExercises from "@components/AccordionExercises.astro";
import { topics } from "@src/data/index";

/*export function getStaticPaths(): Array<Object> {
  return [
    { params: { grade: "7mo" } },
    { params: { grade: "8vo" } },
    { params: { grade: "9no" } },
    { params: { grade: "10mo" } },
    { params: { grade: "11no" } },
    { params: { grade: "12mo" } },
  ];
}*/

type Topic = {
  title: string;
  img: string;
  list: string[];
  exercises: Exercise[];
};

const { grade } = Astro.params as unknown as GradeOnlyParams;

// Obtain the current topic
const currentTopic = topics.find((topic) => topic.title === grade);
// Create a set of exercise titles to build the accordion
const currentTopicExercisesTitles = new Set(
  currentTopic?.exercises.map((exercise) => exercise.title),
);
// Convert the set to an array
const titlesArray = Array.from(currentTopicExercisesTitles);
---

<Layout title={`Grado ${grade}`}>
  <section>
    <div class="title-bg">
      <h2>Ejercicios de {grade} grado</h2>
    </div>

    <div class="section-container">
      {
        topics
          .filter((topic) => topic.title === grade)
          .map((topic) => {
            return (
              <>
                <div class="exercises-container">
                  <div class="accordion">
                    {titlesArray.map((title, index) =>
                      currentTopic ? (
                        <AccordionExercises
                          grade={grade}
                          exerciseTitle={title}
                          currentTopic={currentTopic as Topic}
                          isOdd={index % 2 === 0}
                        />
                      ) : null,
                    )}
                  </div>
                </div>
                <div class="card">
                  <figure>
                    <img
                      src={topic.img}
                      alt={grade}
                      transition:name={`image ${grade} id`}
                    />
                  </figure>
                  <h3>Progresa a tu ritmo</h3>
                  <p>
                    Practica con ejercicios interactivos y recibe
                    retroalimentación inmediata para mejorar tu comprensión.
                  </p>
                  <div class="progress">
                    <div class="progress-container">
                      <span class="progress-text">Tu progreso</span>
                      <span class="progress-percent">25%</span>
                    </div>
                    <div class="progress-bar">
                      <div class="progress-fill" />
                    </div>
                  </div>
                </div>
              </>
            );
          })
      }
    </div>
  </section>
</Layout>

<style>
  section {
    margin-top: 6rem;
    padding: 2rem 4rem;
    background-color: var(--light-grey);
    border-radius: 15px;
  }

  .title-bg {
    background-color: var(--light-grey);
    border-radius: 15px;
    padding: 1rem 2rem;
    margin-top: -3.8rem;
    margin-left: -4rem;
    width: fit-content;
  }

  .title-bg h2 {
    color: var(--dark-grey);
    text-align: center;
    font-size: clamp(1rem, 4vw, 1.5rem);
    margin-bottom: 3rem;
  }

  .section-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
    justify-content: center;
    gap: 5rem;
    padding-block: 2rem;
  }

  .card {
    background-color: white;
    border-radius: 15px;
    padding: 2rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
  }

  figure {
    max-width: 350px;
    height: auto;
    margin: 0 auto;
  }

  .card h3 {
    text-align: center;
    font-size: 1.25rem;
    line-height: 1.75rem;
    color: var(--dark-grey);
    margin-bottom: 0.75rem;
  }

  .card p {
    text-align: center;
    font-size: 1rem;
    line-height: 1.5rem;
    color: rgb(75 85 99);
    margin-bottom: 1.5rem;
    padding-inline: 2rem;
  }

  .progress {
    background-color: var(--light-grey);
    border-radius: 10px;
    padding: 1rem;
  }

  .progress-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .progress-text {
    color: var(--dark-grey);
    font-weight: 600;
  }

  .progress-percent {
    color: var(--secondary-color-dark-2);
  }

  .progress-bar {
    background-color: white;
    border-radius: 20px;
    height: 0.5rem;
    overflow: hidden;
  }

  .progress-fill {
    background-color: var(--secondary-color-dark);
    height: 100%;
    width: 25%;
    border-radius: 20px;
  }

  @media (max-width: 768px) {
    .section-container {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
    h2 {
      text-align: center;
      margin: 0;
    }
  }
</style>
