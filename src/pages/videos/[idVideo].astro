---
import Layout from "@layouts/Layout.astro";
import VideoChapters from "@components/ui/VideoChapters.astro";
import YouTubePlayer from "@src/components/YouTubePlayer.astro";

import Book from "@assets/icons/ex-figure-book.svg";
import YoutubeIcon from "@assets/icons/youtube.svg";

import type { VideoParams, YouTubeVideo, VideoChapter } from "@types";

import { getVideoById } from "@src/utils/helpers/youtubeService";
import { parseDuration } from "@src/utils/helpers/parseVideoYtTime";
import { findVideoById } from "@src/utils/helpers/findVideo";
import { extractChaptersFromDescription } from "@src/utils/helpers/youtubeChapters";
import { classes } from "@src/data/constants";

/*
export function getStaticPaths() {
  const paths: Array<{ params: { video: string } }> = [];

  // Dinamic routes
  classes.forEach((class_) => {
    paths.push({ params: { video: `${class_.title}` } });
  });
  return paths;
}
  */

const { idVideo } = Astro.params as unknown as VideoParams;

// Obtener los datos completos del video usando su ID.
// getVideoById() seguirá usando el caché si está disponible, lo cual es bueno.
const videoYtData = (await getVideoById(idVideo)) as YouTubeVideo;
const videoLocalData = findVideoById(idVideo);

// Manejar el caso de que el video no se encuentre (redirección a 404)
if (!videoYtData || !videoLocalData) {
  return Astro.redirect("/404");
}

const formattedDuration = parseDuration(videoYtData.contentDetails.duration);

const chapters: VideoChapter[] = extractChaptersFromDescription(
  videoYtData.snippet.description,
);
---

<script
  src="https://cdn.jsdelivr.net/npm/@justinribeiro/lite-youtube@1/lite-youtube.min.js"
></script>

<Layout title={`Videos de la clase ${videoLocalData.title}`}>
  <section class="video-detail-page">
    <article class="video-page-data">
      <div class="video-container">
        <YouTubePlayer videoId={videoYtData.id} />
        <!-- <lite-youtube videoid={videoYtData.id} params="enablejsapi=1"
        ></lite-youtube>
       -->
      </div>

      <div class="video-info">
        <h2 class="video-title">
          {videoLocalData.title}
        </h2>
        <div class="video-data">
          <Book class="svg-stroke video-data-icon" />
          {videoLocalData.grade}
          <YoutubeIcon class="svg-stroke video-data-icon" />
          <span>{formattedDuration}</span>
        </div>
        <h3>Descripción:</h3>
        <p>{videoLocalData.description}</p>
      </div>
    </article>

    <article class="video-chapters-playlist">
      <!-- Video Chapters -->
      <VideoChapters chapters={chapters} videoId={videoYtData.id} />
    </article>
  </section>
</Layout>

<style>
  .video-detail-page {
    display: flex;
    gap: 2rem;
    margin-block: 3.5rem 3rem;
  }

  .video-container {
    width: 100%;
    max-width: 800px;
    aspect-ratio: 16 / 9;
    border-radius: 10px;
    background-color: var(--light-grey);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    border: 3px solid var(--dark-grey);
    overflow: hidden;
  }

  .video-info {
    max-width: 800px;
    margin-top: 2rem;
    padding: 0 1rem;
    color: var(--dark-grey);
  }

  .video-title {
    font-size: 1.5rem;
  }

  .video-data {
    display: flex;
    align-items: center;
    margin-block: 0.75rem;
    font-size: 0.875rem;
    line-height: 2;
  }

  .video-data-icon {
    margin-right: 0.25rem;
    margin-left: 1rem;
    width: 16px;
  }

  .video-info h3 {
    font-size: 1.125rem;
    margin-bottom: 0.5rem;
  }

  .video-info p {
    font-size: 1rem;
    line-height: 1.5;
  }
</style>
