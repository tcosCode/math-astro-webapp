---
interface Props {
  buttonClass: string;
  dataValidation?: "correct" | "incorrect";
}

const { buttonClass, dataValidation } = Astro.props;
---

<button class={buttonClass} data-validation={dataValidation}>
  <slot />
</button>

<style>
  .option-btn {
    background-color: hsl(var(--light-grey));
    border: 2px solid hsl(var(--border-btn-option));
    padding: 0.6rem 1rem;
    font-size: 1rem;
    cursor: pointer;
    width: 100%;
    border-radius: 0.5rem;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  .option-btn:hover {
    background-color: hsl(var(--btn-option-hover-background-color));
    transform: scale(1.02);
  }

  .correct {
    background-color: hsl(var(--correct-color));
    color: white;
    border-color: hsl(var(--correct-color));
  }

  .incorrect {
    background-color: hsl(var(--incorrect-color));
    color: white;
    border-color: hsl(var(--incorrect-color));
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .correct,
  .incorrect {
    animation: fadeIn 0.5s ease;
  }
</style>
