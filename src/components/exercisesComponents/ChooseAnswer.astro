---
import ArrowRedoRight from "@components/icons/ArrowRedoRight.astro";

interface ChooseAnswerProps {
  inciso: string;
  exerciseText: string;
  answer: Array<Answer>;
}

interface Answer {
  text: string;
  validation: "correct" | "incorrect";
}

const { inciso, exerciseText, answer } = Astro.props as ChooseAnswerProps;
---

<div class="grid-item">
  <!-- Opciones de respuesta utilizando CSS Grid -->
  <p><strong>{inciso}) <span set:html={exerciseText} /></strong></p>
  <button class="option-btn" data-validation={answer[0].validation}>
    <span set:html={answer[0].text} /></button
  >
  <button class="option-btn" data-validation={answer[1].validation}>
    <span set:html={answer[1].text} />
  </button>
  <button class="option-btn" data-validation={answer[2].validation}>
    <span set:html={answer[2].text} />
  </button>

  <!-- Espacio de retroalimentación -->
  <div id="feedback">
    <h3 class="h3-correct" style="display: none">
      ¡Felicidades! Lo ha conseguido.
    </h3>
    <h3 class="h3-incorrect" style="display: none">
      Lo sentimos. Su selección no es correcta.
    </h3>
  </div>

  <!-- Botón para reiniciar el ejercicio -->
  <button id="retryButton" style="display: none">
    <div>
      <ArrowRedoRight class="svg" />
      <span>Intentarlo de nuevo</span>
    </div>
  </button>
</div>

<script src="@utils/scriptChooseAnswer.ts"></script>

<style>
  .grid-item {
    background-color: var(--background-color);
    padding: 1.8rem 4rem;
    border: 1px solid var(--border-background-color);
    border-radius: 8px;
    text-align: left;
  }

  .option-btn {
    background-color: var(--btn-option-background-color);
    border: 2px solid var(--border-btn-option);
    padding: 10px 15px;
    font-size: 1rem;
    cursor: pointer;
    margin-top: 10px;
    width: 100%;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  .option-btn:hover {
    background-color: var(--btn-option-hover-background-color);
    transform: scale(1.05);
  }

  .h3-correct {
    color: var(--correct-color);
    margin-top: 1rem;
  }

  .h3-incorrect {
    color: var(--incorrect-color);
    margin-top: 1rem;
  }

  .correct {
    background-color: var(--correct-color);
    color: var(--white-color);
    border-color: var(--border-correct-color);
  }

  .incorrect {
    background-color: var(--incorrect-color);
    color: var(--white-color);
    border-color: var(--border-incorrect-color);
  }

  #retryButton {
    display: flex;
    max-width: fit-content;
    align-items: center;
    gap: 10px;
    margin-top: 20px;
    padding: 10px 20px;
    font-size: 18px;
    background-color: var(--primary-color-dark-2);
    color: var(--white-color);
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  #retryButton > div {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  #retryButton:hover {
    background-color: var(--primary-color);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .correct,
  .incorrect {
    animation: fadeIn 0.5s ease;
  }
</style>
