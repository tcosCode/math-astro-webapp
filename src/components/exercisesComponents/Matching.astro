---
//Import types
import type { MatchingProps } from "@types";

const { text, pairId, length } = Astro.props as MatchingProps;
---

<div class="grid-item" data-length={length}>
  <!-- Opciones de respuesta utilizando CSS Grid -->

  <div class="card" data-validation={pairId}>
    <span set:html={text} />
  </div>

  <script src="@utils/scriptMatching.ts"></script>

  <style>
    .grid-item {
      padding: 0.5rem;
    }

    .card {
      padding: 2rem 1rem;
      background-color: hsl(var(--light-grey));
      border: 3px solid hsl(var(--border-btn-option));
      border-radius: 1rem;
      text-align: center;
      cursor: pointer;
      user-select: none;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition:
        border-color 0.3s,
        background-color 0.3s,
        transform 1.5s,
        opacity 0.3s; /* Transiciones para el borde, el zoom y la opacidad */
    }

    .card:hover {
      background-color: hsl(var(--btn-option-hover-background-color));
    }

    /* Borde azul al seleccionar */
    .selected {
      border-color: hsl(var(--primary-color));
    }

    /* Efecto de shake para cartas incorrectas */
    .incorrect {
      border-color: hsl(var(--incorrect-color));
      background-color: hsl(var(--incorrect-color));
      animation: vibrate 0.5s linear both;
    }

    .incorrect:hover {
      background-color: hsl(var(--incorrect-color));
    }

    /* Zoom out y desvanecimiento para cartas correctas */
    .correct {
      background-color: hsl(var(--correct-color));
      color: white;
      border-color: hsl(var(--correct-color));
      transform: scale(0.5); /* Zoom out */
      opacity: 0; /* Desvanecer */
      pointer-events: none; /* Desactivar interacción */
    }

    .correct:hover {
      background-color: hsl(var(--correct-color));
    }

    /* Animación de vibrate */

    /* ----------------------------------------------
  Generated by AnimatiSS
  Licensed under FreeBSD License
  URL: https://xsgames.co/animatiss
  Twitter: @xsgames_
---------------------------------------------- */

    @keyframes vibrate {
      0% {
        transform: translate(0);
      }
      20% {
        transform: translate(-2px, 2px);
      }
      40% {
        transform: translate(-2px, -2px);
      }
      60% {
        transform: translate(2px, 2px);
      }
      80% {
        transform: translate(2px, -2px);
      }
      100% {
        transform: translate(0);
      }
    }
  </style>
</div>
