---
const { grade, exerciseTitle, currentTopic } = Astro.props;
---

<div class="accordion__item">
  <header class="accordion__header">
    <img
      src="/icons/bx-plus.svg"
      alt="Plus icon for the accordion "
      class="bx bx-plus accordion__icon"
    />
    <h3 class="accordion__title">
      {exerciseTitle}
    </h3>
  </header>
  <div class="accordion__content">
    {
      currentTopic.exercises
        .filter((exercise: any) => exercise.title === exerciseTitle)
        .map((exercise: any) => {
          return (
            <a class="accordion__description" href={`/${grade}/${exercise.id}`}>
              Ejercicio {exercise.id}
            </a>
          );
        })
    }
  </div>
</div>

<script src="@utils/scriptAccordion.ts"></script>

<style>
  :root {
    /*========== Colors ==========*/
    --hue-color: 225;
    --first-color: hsl(var(--hue-color), 48%, 35%);
    --title-color: hsl(var(--hue-color), 48%, 22%);
    --text-color: hsl(var(--hue-color), 12%, 35%);
    --body-color: hsl(var(--hue-color), 49%, 98%);
  }

  .accordion__title {
    font-size: 1.2rem;
    font-weight: 400;
    margin-top: 0.15rem;
    transition: 0.2s;
  }
  .accordion__header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1.25rem 1.25rem 1.25rem 1rem;
    cursor: pointer;
  }
  .accordion__description {
    font-size: 1rem;
    width: 100%;
    padding: 1rem 3rem;
    display: block;
    background-color: white;
  }

  .accordion__description:hover {
    background-color: hsla(0, 0%, 95%, 0.1);
  }

  .accordion__icon {
    transition: 0.3s;
  }
  .accordion__item {
    border-radius: 0.25rem 0 0.25rem;
    position: relative;
    transition: all 0.25s ease;
  }
  .accordion__item::after {
    content: "";
    width: 5px;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 0.25rem 0 0 0.25rem;
  }
  .accordion__item:nth-child(odd) {
    background-color: hsl(28, 100%, 95%);
    --border-description-color: var(--secondary-color-light);
  }
  .accordion__item:nth-child(odd)::after {
    background-color: var(--secondary-color-light);
  }
  .accordion__item:nth-child(even) {
    background-color: hsl(200, 100%, 95%);
    --border-description-color: var(--primary-color-dark-2);
  }
  .accordion__item:nth-child(even)::after {
    background-color: var(--primary-color-dark-2);
  }
  /* .accordion__item:nth-child(3n) {
    background-color: #fff0f3;
  }
  .accordion__item:nth-child(3n)::after {
    background-color: #ff8aa1;
  }
  .accordion__item:nth-child(4n) {
    background-color:  #f0f0ff;
  }
  .accordion__item:nth-child(4n)::after {
    background-color:  #8a8aff;
  } */
  .accordion__content {
    overflow: hidden;
    height: 0;
    transition: all 0.25s ease;
  }

  /*Rotate icon and add font weight to titles and border to headers*/
  .accordion-open .accordion__icon {
    transform: rotate(45deg);
  }
  .accordion-open .accordion__title {
    font-weight: 600;
  }
  .accordion-open .accordion__header {
    border-bottom: 1px solid var(--border-description-color);
  }
</style>
